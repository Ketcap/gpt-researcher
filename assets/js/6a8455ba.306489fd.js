"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4753],{5680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>h});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=p(t),m=a,h=g["".concat(l,".").concat(m)]||g[m]||u[m]||i;return t?n.createElement(h,s(s({ref:r},c),{},{components:t})):n.createElement(h,s({ref:r},c))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=m;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o[g]="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9385:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=t(8168),a=(t(6540),t(5680));const i={},s="Retrievers",o={unversionedId:"gpt-researcher/search-engines/retrievers",id:"gpt-researcher/search-engines/retrievers",isDocsHomePage:!1,title:"Retrievers",description:"Retrievers are search engines used to find the most relevant documents for a given research task.",source:"@site/docs/gpt-researcher/search-engines/retrievers.md",sourceDirName:"gpt-researcher/search-engines",slug:"/gpt-researcher/search-engines/retrievers",permalink:"/docs/gpt-researcher/search-engines/retrievers",editUrl:"https://github.com/assafelovic/gpt-researcher/tree/master/docs/docs/gpt-researcher/search-engines/retrievers.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Running with Ollama",permalink:"/docs/gpt-researcher/llms/running-with-ollama"},next:{title:"Testing your Retriever",permalink:"/docs/gpt-researcher/search-engines/test-your-retriever"}},l=[{value:"Web Search Engines",id:"web-search-engines",children:[],level:2},{value:"Custom Retrievers",id:"custom-retrievers",children:[{value:"Example",id:"example",children:[],level:3},{value:"Response Format",id:"response-format",children:[],level:3}],level:2}],p={toc:l},c="wrapper";function g(e){let{components:r,...t}=e;return(0,a.yg)(c,(0,n.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"retrievers"},"Retrievers"),(0,a.yg)("p",null,"Retrievers are search engines used to find the most relevant documents for a given research task.\nYou can specify your preferred web search or use any custom retriever of your choice."),(0,a.yg)("h2",{id:"web-search-engines"},"Web Search Engines"),(0,a.yg)("p",null,"GPT Researcher defaults to using the ",(0,a.yg)("a",{parentName:"p",href:"https://app.tavily.com"},"Tavily")," search engine for retrieving search results.\nBut you can also use other search engines by specifying the ",(0,a.yg)("inlineCode",{parentName:"p"},"RETRIEVER")," env var. Please note that each search engine has its own API Key requirements and usage limits."),(0,a.yg)("p",null,"For example:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"RETRIEVER=bing\n")),(0,a.yg)("p",null,"You can also specify multiple retrievers by separating them with commas. The system will use each specified retriever in sequence.\nFor example:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"RETRIEVER=tavily, arxiv\n")),(0,a.yg)("p",null,"Thanks to our community, we have integrated the following web search engines:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://app.tavily.com"},"Tavily")," - Default"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/bing/apis/bing-web-search-api"},"Bing")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=bing")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://developers.google.com/custom-search/v1/overview"},"Google")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=google")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.searchapi.io/"},"SearchApi")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=searchapi")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://serpapi.com/"},"Serp API")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=serpapi")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://serper.dev/"},"Serper")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=serper")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://searx.github.io/searx/"},"Searx")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=searx")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://pypi.org/project/duckduckgo-search/"},"Duckduckgo")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=duckduckgo")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://info.arxiv.org/help/api/index.html"},"Arxiv")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=arxiv")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://docs.exa.ai/reference/getting-started"},"Exa")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=exa")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.ncbi.nlm.nih.gov/home/develop/api/"},"PubMedCentral")," - Env: ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER=pubmed_central"))),(0,a.yg)("h2",{id:"custom-retrievers"},"Custom Retrievers"),(0,a.yg)("p",null,"You can also use any custom retriever of your choice by specifying the ",(0,a.yg)("inlineCode",{parentName:"p"},"RETRIEVER=custom")," env var.\nCustom retrievers allow you to use any search engine that provides an API to retrieve documents and is widely used for enterprise research tasks."),(0,a.yg)("p",null,"In addition to setting the ",(0,a.yg)("inlineCode",{parentName:"p"},"RETRIEVER")," env, you also need to set the following env vars:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER_ENDPOINT"),": The endpoint URL of the custom retriever."),(0,a.yg)("li",{parentName:"ul"},"Additional arguments required by the retriever should be prefixed with ",(0,a.yg)("inlineCode",{parentName:"li"},"RETRIEVER_ARG_")," (e.g., RETRIEVER_ARG_API_KEY).")),(0,a.yg)("h3",{id:"example"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"RETRIEVER=custom\nRETRIEVER_ENDPOINT=https://api.myretriever.com\nRETRIEVER_ARG_API_KEY=YOUR_API_KEY\n")),(0,a.yg)("h3",{id:"response-format"},"Response Format"),(0,a.yg)("p",null,"For the custom retriever to work correctly, the response from the endpoint should be in the following format:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "url": "http://example.com/page1",\n    "raw_content": "Content of page 1"\n  },\n  {\n    "url": "http://example.com/page2",\n    "raw_content": "Content of page 2"\n  }\n]\n')),(0,a.yg)("p",null,"The system assumes this response format and processes the list of sources accordingly."),(0,a.yg)("p",null,"Missing a retriever? Feel free to contribute to this project by submitting issues or pull requests on our ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/assafelovic/gpt-researcher"},"GitHub")," page."))}g.isMDXComponent=!0}}]);